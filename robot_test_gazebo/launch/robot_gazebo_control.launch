<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find robot_test_gazebo)/world/robot_test.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
    command="$(find xacro)/xacro --inorder '$(find robot_test)/urdf/robot_test.xacro'" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model rrbot -param robot_description"/>

    <!-- Robot state publisher -->
	<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
		<param name="publish_frequency" type="double" value="50.0" />
		<param name="tf_prefix" type="string" value="" />
	</node>

  <!-- ros_control rrbot launch file -->
  <!--include file="$(find rrbot_control)/launch/rrbot_control.launch" /-->
  <!-- joint_state_controller -->
	<rosparam file="$(find robot_test_control1)/config/robot_test_statecontrol3.yaml" command="load"/>
	<node
		name="joint_state_controller_spawner"
		pkg="controller_manager"
		type="spawner"
    ns="/robot_test"
		args="joint_state_controller"
		respawn="false"
		output="screen"
	/>

	<!-- Load controller file to parameter server -->
	<rosparam file="$(find robot_test_control1)/config/robot_test_control3.yaml" command="load"/>

	<!-- Spin up the controller node -->
	<node
		name="robot_test_controller_spawner"
		pkg="controller_manager"
		type="spawner"
    ns="/robot_test"
		args="chain_position_controller" respawn="false" output="screen"
	/>

</launch>
